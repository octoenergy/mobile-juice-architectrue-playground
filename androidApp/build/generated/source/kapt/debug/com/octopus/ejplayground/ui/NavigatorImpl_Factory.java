// Generated by Dagger (https://dagger.dev).
package com.octopus.ejplayground.ui;

import com.octopus.ejplayground.CurrentRepoRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NavigatorImpl_Factory implements Factory<NavigatorImpl> {
  private final Provider<AndroidPlaygroundActivity> androidPlaygroundActivityProvider;

  private final Provider<CurrentRepoRepository> currentRepoRepositoryProvider;

  public NavigatorImpl_Factory(
      Provider<AndroidPlaygroundActivity> androidPlaygroundActivityProvider,
      Provider<CurrentRepoRepository> currentRepoRepositoryProvider) {
    this.androidPlaygroundActivityProvider = androidPlaygroundActivityProvider;
    this.currentRepoRepositoryProvider = currentRepoRepositoryProvider;
  }

  @Override
  public NavigatorImpl get() {
    return newInstance(androidPlaygroundActivityProvider.get(), currentRepoRepositoryProvider.get());
  }

  public static NavigatorImpl_Factory create(
      Provider<AndroidPlaygroundActivity> androidPlaygroundActivityProvider,
      Provider<CurrentRepoRepository> currentRepoRepositoryProvider) {
    return new NavigatorImpl_Factory(androidPlaygroundActivityProvider, currentRepoRepositoryProvider);
  }

  public static NavigatorImpl newInstance(AndroidPlaygroundActivity androidPlaygroundActivity,
      CurrentRepoRepository currentRepoRepository) {
    return new NavigatorImpl(androidPlaygroundActivity, currentRepoRepository);
  }
}
