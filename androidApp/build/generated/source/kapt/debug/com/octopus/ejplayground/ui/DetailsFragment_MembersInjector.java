// Generated by Dagger (https://dagger.dev).
package com.octopus.ejplayground.ui;

import com.octopus.ejplayground.viewmodels.DetailsViewModel;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailsFragment_MembersInjector implements MembersInjector<DetailsFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<DetailsViewModel> detailsViewModelProvider;

  public DetailsFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DetailsViewModel> detailsViewModelProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.detailsViewModelProvider = detailsViewModelProvider;
  }

  public static MembersInjector<DetailsFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DetailsViewModel> detailsViewModelProvider) {
    return new DetailsFragment_MembersInjector(androidInjectorProvider, detailsViewModelProvider);}

  @Override
  public void injectMembers(DetailsFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectDetailsViewModel(instance, detailsViewModelProvider.get());
  }

  @InjectedFieldSignature("com.octopus.ejplayground.ui.DetailsFragment.detailsViewModel")
  public static void injectDetailsViewModel(DetailsFragment instance,
      DetailsViewModel detailsViewModel) {
    instance.detailsViewModel = detailsViewModel;
  }
}
