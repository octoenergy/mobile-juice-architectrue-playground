// Generated by Dagger (https://dagger.dev).
package com.octopus.ejplayground.services;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubService_Factory implements Factory<GithubService> {
  private final Provider<GithubApiBuilder> githubApiBuilderProvider;

  private final Provider<GithubRepoMapper> githubRepoMapperProvider;

  public GithubService_Factory(Provider<GithubApiBuilder> githubApiBuilderProvider,
      Provider<GithubRepoMapper> githubRepoMapperProvider) {
    this.githubApiBuilderProvider = githubApiBuilderProvider;
    this.githubRepoMapperProvider = githubRepoMapperProvider;
  }

  @Override
  public GithubService get() {
    return newInstance(githubApiBuilderProvider.get(), githubRepoMapperProvider.get());
  }

  public static GithubService_Factory create(Provider<GithubApiBuilder> githubApiBuilderProvider,
      Provider<GithubRepoMapper> githubRepoMapperProvider) {
    return new GithubService_Factory(githubApiBuilderProvider, githubRepoMapperProvider);
  }

  public static GithubService newInstance(GithubApiBuilder githubApiBuilder,
      GithubRepoMapper githubRepoMapper) {
    return new GithubService(githubApiBuilder, githubRepoMapper);
  }
}
